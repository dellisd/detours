{"version":3,"sources":["useWindow.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WindowContext","React","createContext","ProvideWindow","props","cache","useState","window","innerWidth","innerHeight","size","setSize","useEffect","addEventListener","useProvideWindow","Provider","value","children","Container","styled","div","Overlay","Select","select","colorExpression","defaultRef","URLSearchParams","location","search","get","App","selected","setSelected","windowSize","useContext","mapRef","useRef","longitude","latitude","zoom","viewport","setViewport","selectedFilter","style","width","height","mapStyle","accessToken","process","hash","ref","onViewportChange","v","attributionControl","compact","position","customAttribution","Date","toLocaleString","showCompass","showZoom","id","type","data","stops","source","minzoom","paint","filter","layout","onChange","e","newRef","target","features","feature","properties","detour","active","length","featureBbox","bbox","map","current","getMap","fitBounds","padding","routes","groups","group","label","title","route","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74a3ef46.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\nconst useProvideWindow = (): [number, number] => {\n  const [size, setSize] = useState<[number, number]>([\n    window.innerWidth,\n    window.innerHeight,\n  ]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setSize([window.innerWidth, window.innerHeight]);\n    });\n  }, []);\n\n  return size;\n};\n\nconst WindowContext = React.createContext<[number, number]>([0, 0]);\n\nexport const ProvideWindow = (props: { children: React.ReactNode }) => {\n  const cache = useProvideWindow();\n\n  return (\n    <WindowContext.Provider value={cache}>\n      {props.children}\n    </WindowContext.Provider>\n  );\n};\n\nexport const useWindow = () => useContext(WindowContext);","import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport data from \"./data.json\";\nimport routes from \"./routes.json\";\nimport stops from \"./stops.json\";\n\nimport MapGL, {\n  Viewport,\n  Layer,\n  NavigationControl,\n  Source,\n  AttributionControl,\n} from \"@urbica/react-map-gl\";\nimport { useWindow } from \"./useWindow\";\nimport { FeatureCollection } from \"geojson\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport preval from \"preval.macro\";\nimport { LngLatBoundsLike, Map as MapboxMap } from \"mapbox-gl\";\nimport bbox from \"@turf/bbox\";\n\nconst buildDate = preval`module.exports = new Date()`;\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst Overlay = styled.div`\n  display: flex;\n  overflow: hidden;\n  position: absolute;\n\n  @media (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nconst Select = styled.select`\n  margin: 1em;\n  border-radius: 0.5em;\n  border: solid 1px #e7e7e7;\n  padding: 0.5em;\n\n  @media (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nconst colorExpression = [\n  \"case\",\n  [\"in\", [\"get\", \"ref\"], [\"literal\", [\"1\"]]],\n  \"#D62937\",\n  [\"in\", [\"get\", \"ref\"], [\"literal\", [\"5\", \"9\", \"16\", \"18\", \"19\", \"66\"]]],\n  \"#404040\",\n  [\n    \"in\",\n    [\"get\", \"ref\"],\n    [\"literal\", [\"61\", \"63\", \"75\", \"N39\", \"N45\", \"N57\", \"N61\", \"N75\", \"N97\"]],\n  ],\n  \"#1A559B\",\n  [\"in\", [\"get\", \"ref\"], [\"literal\", [\"6\", \"7\", \"10\", \"11\", \"14\", \"15\", \"85\"]]],\n  \"#F26532\",\n  [\"in\", [\"get\", \"ref\"], [\"literal\", [\"400\"]]],\n  \"#007E88\",\n  \"#404040\",\n];\n\nconst params = new URLSearchParams(window.location.search);\nconst defaultRef = params.get(\"ref\");\n\nfunction App() {\n  const [selected, setSelected] = useState<string>(defaultRef ?? \"5\");\n  const windowSize = useWindow();\n  const mapRef = useRef<MapGL>(null);\n\n  const [viewport, setViewport] = useState<Viewport>({\n    longitude: -75.69055,\n    latitude: 45.40638,\n    zoom: 12.5,\n  });\n\n  const handleViewportChange = (v: Viewport) => {\n    setViewport(v);\n  };\n\n  let selectedFilter =\n    selected === \"all\"\n      ? [\n          \"any\",\n          [\"==\", [\"get\", \"night\"], [\"literal\", null]],\n          [\"!\", [\"get\", \"night\"]],\n        ]\n      : [\"==\", [\"get\", \"ref\"], selected];\n\n  if (selected === \"night\") {\n    selectedFilter = [\"get\", \"night\"];\n  }\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newRef = e.target.value;\n    setSelected(newRef);\n\n    const features = data.features.filter((feature) => {\n      return (\n        feature.properties.ref === newRef &&\n        (feature.properties.detour || !feature.properties.active)\n      );\n    });\n\n    if (features.length === 0) {\n      return;\n    }\n\n    const featureBbox = bbox({\n      type: \"FeatureCollection\",\n      features,\n    }) as LngLatBoundsLike;\n\n    const map: MapboxMap | undefined = mapRef.current?.getMap();\n    map?.fitBounds(featureBbox, {\n      padding: 128,\n    });\n  };\n\n  return (\n    <Container>\n      <MapGL\n        style={{ width: windowSize[0], height: windowSize[1] }}\n        mapStyle={\"mapbox://styles/mapbox/light-v10\"}\n        accessToken={process.env.REACT_APP_MAPBOX_KEY}\n        hash={true}\n        ref={mapRef}\n        onViewportChange={handleViewportChange}\n        {...viewport}\n        attributionControl={false}\n      >\n        <AttributionControl\n          compact={windowSize[0] <= 600}\n          position=\"bottom-right\"\n          customAttribution={`Updated at ${new Date(\n            buildDate\n          ).toLocaleString()}`}\n        />\n        <NavigationControl showCompass showZoom position=\"bottom-right\" />\n        <Source id=\"routes\" type=\"geojson\" data={data as FeatureCollection} />\n        <Source id=\"stops\" type=\"geojson\" data={stops as FeatureCollection} />\n        <Layer\n          id=\"stops\"\n          source=\"stops\"\n          type=\"circle\"\n          minzoom={13}\n          paint={{\n            \"circle-color\": \"#FF4436\",\n            \"circle-radius\": [\n              \"interpolate\",\n              [\"exponential\", 2],\n              [\"zoom\"],\n              12,\n              1,\n              16,\n              6,\n            ],\n          }}\n        />\n        <Layer\n          id=\"route-lines\"\n          type=\"line\"\n          source=\"routes\"\n          filter={[\"all\", selectedFilter, [\"get\", \"active\"]]}\n          layout={{\n            \"line-cap\": \"round\",\n          }}\n          paint={{\n            \"line-width\": 5,\n            \"line-color\": colorExpression as any,\n          }}\n        />\n        <Layer\n          id=\"route-lines-inactive\"\n          type=\"line\"\n          source=\"routes\"\n          filter={[\"all\", selectedFilter, [\"!\", [\"get\", \"active\"]]]}\n          layout={{\n            \"line-cap\": \"round\",\n          }}\n          paint={{\n            \"line-width\": 3,\n            \"line-opacity\": 0.3,\n            \"line-dasharray\": [1, 2],\n            \"line-color\": colorExpression as any,\n          }}\n        />\n      </MapGL>\n      <Overlay>\n        <Select value={selected} onChange={handleChange}>\n          {routes.groups.map((group) => (\n            <optgroup key={group.title} label={group.title}>\n              {group.routes.map((route) => (\n                <option value={route.ref} key={route.ref}>\n                  {route.name}\n                </option>\n              ))}\n            </optgroup>\n          ))}\n        </Select>\n      </Overlay>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ProvideWindow } from \"./useWindow\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, #root {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <ProvideWindow>\n      <App />\n    </ProvideWindow>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}